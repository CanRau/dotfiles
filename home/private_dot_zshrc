# inspired by
# - https://youtu.be/9U8LCjuQzdc?si=vK-ljhU2loz1dZWb
# - https://github.com/dreamsofautonomy/zensh/blob/main/.zshrc

# Load completions
autoload -Uz compinit && compinit

source $HOME/.bash_aliases
source $HOME/.config/shell/path.sh
source $HOME/.config/shell/env.sh
source $HOME/.config/zsh/aliases.zsh
source $HOME/.config/zsh/functions.zsh
source $HOME/.config/shell/completions/chezmoi.zsh
source $HOME/.config/shell/completions/jj.zsh
# source $HOME/.config/shell/completions/mise.zsh

# Brew

if [[ -f "/opt/homebrew/bin/brew" ]] then
  # If you're using macOS, you'll want this enabled
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Plugin Manager

# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Prompt

if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
  # eval "$(oh-my-posh init zsh)"
  eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh/zen.yaml)"
fi

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab
zinit light ajeetdsouza/zoxide
zinit light MichaelAquilina/zsh-you-should-use

# Add in snippets
zinit snippet OMZL::git.zsh
zinit snippet OMZP::git # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git
zinit snippet OMZP::sudo # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/sudo
zinit snippet OMZP::aws
zinit snippet OMZP::gh # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/gh
zinit snippet OMZP::fzf # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/fzf - https://github.com/junegunn/fzf
zinit snippet OMZP::common-aliases
# zinit snippet OMZP::docker # https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/docker
# zinit snippet OMZP::docker-compose
# zinit snippet OMZP::doctl
zinit snippet OMZP::extract
zinit snippet OMZP::globalias
zinit snippet OMZP::command-not-found

# Usage & Mise with completions
zinit as="command" lucid from="gh-r" for \
    id-as="usage" \
    atpull="%atclone" \
    jdx/usage
    #atload='eval "$(mise activate zsh)"' \

zinit as="command" lucid from="gh-r" for \
    id-as="mise" mv="mise* -> mise" \
    atclone="./mise* completion zsh > _mise" \
    atpull="%atclone" \
    atload='eval "$(mise activate zsh)"' \
    jdx/mise

zinit cdreplay -q

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

eval "$(mise activate zsh)"
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"
eval $(thefuck --alias)


# Nix
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
  . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi
# End Nix



#
#
#
#
#
#
#
# >>>>> OLD 

# # If you come from bash you might have to change your $PATH.
# # export PATH=$HOME/bin:/usr/local/bin:$PATH

# # Path to your oh-my-zsh installation.
# export ZSH=$HOME/.oh-my-zsh

# #https://github.com/ohmyzsh/ohmyzsh/issues/7332
# export ZSH_COMPDUMP="${ZDOTDIR:-${ZSH}}/cache/.zcompdump-${SHORT_HOST}-${ZSH_VERSION}"

# # Set name of the theme to load --- if set to "random", it will
# # load a random theme each time oh-my-zsh is loaded, in which case,
# # to know which specific one was loaded, run: echo $RANDOM_THEME
# # See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# # ZSH_THEME="robbyrussell"
# # ZSH_THEME=powerlevel10k/powerlevel10k

# # Set list of themes to pick from when loading at random
# # Setting this variable when ZSH_THEME=random will cause zsh to load
# # a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# # If set to an empty array, this variable will have no effect.
# # ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# # Uncomment the following line to use case-sensitive completion.
# # CASE_SENSITIVE="true"

# # Uncomment the following line to use hyphen-insensitive completion.
# # Case-sensitive completion must be off. _ and - will be interchangeable.
# # HYPHEN_INSENSITIVE="true"

# # Uncomment the following line to disable bi-weekly auto-update checks.
# # DISABLE_AUTO_UPDATE="true"

# # Uncomment the following line to automatically update without prompting.
# # DISABLE_UPDATE_PROMPT="true"

# # Uncomment the following line to change how often to auto-update (in days).
# # export UPDATE_ZSH_DAYS=13

# # Uncomment the following line if pasting URLs and other text is messed up.
# # DISABLE_MAGIC_FUNCTIONS=true

# # Uncomment the following line to disable colors in ls.
# # DISABLE_LS_COLORS="true"

# # Uncomment the following line to disable auto-setting terminal title.
# # DISABLE_AUTO_TITLE="true"

# # Uncomment the following line to enable command auto-correction.
# # ENABLE_CORRECTION="true"

# # Uncomment the following line to display red dots whilst waiting for completion.
# # COMPLETION_WAITING_DOTS="true"

# # Uncomment the following line if you want to disable marking untracked files
# # under VCS as dirty. This makes repository status check for large repositories
# # much, much faster.
# # DISABLE_UNTRACKED_FILES_DIRTY="true"

# # Uncomment the following line if you want to change the command execution time
# # stamp shown in the history command output.
# # You can set one of the optional three formats:
# # "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# # or set a custom format using the strftime function format specifications,
# # see 'man strftime' for details.
# # HIST_STAMPS="mm/dd/yyyy"

# # Would you like to use another custom folder than $ZSH/custom?
# # ZSH_CUSTOM=/path/to/new-custom-folder

# if type brew &>/dev/null; then
#   FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
#   eval "$(brew shellenv)"
# fi

# # Which plugins would you like to load?
# # Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# # Example format: plugins=(rails git textmate ruby lighthouse)
# # Add wisely, as too many plugins slow down shell startup.
# plugins=(
#   # zsh-nvm
#   # aliases
#   common-aliases
#   docker
#   docker-compose
#   # docker-machine
#   doctl
#   extract
#   git
#   globalias
#   # yarn
#   you-should-use
#   zsh-autosuggestions
# )

# source $ZSH/oh-my-zsh.sh

# # auto use .nvmrc
# # based on https://stackoverflow.com/a/39519460/3484824
# # autoload -U add-zsh-hook
# # load-nvmrc() {
# #   local node_version="$(nvm version)"
# #   local nvmrc_path="$(nvm_find_nvmrc)"

# #   if [ -n "$nvmrc_path" ]; then
# #     local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

# #     if [ "$nvmrc_node_version" = "N/A" ]; then
# #       nvm install
# #     elif [ "$nvmrc_node_version" != "$node_version" ]; then
# #       nvm use
# #     fi
# #   elif [ "$node_version" != "$(nvm version default)" ]; then
# #     echo "Reverting to nvm default version"
# #     nvm use default
# #   fi
# # }
# # add-zsh-hook chpwd load-nvmrc
# # load-nvmrc

# # User configuration

# # export MANPATH="/usr/local/man:$MANPATH"

# # You may need to manually set your language environment
# # export LANG=en_US.UTF-8

# # Preferred editor for local and remote sessions
# # if [[ -n $SSH_CONNECTION ]]; then
# #   export EDITOR='vim'
# # else
# #   export EDITOR='mvim'
# # fi

# # Compilation flags
# # export ARCHFLAGS="-arch x86_64"

# # Set personal aliases, overriding those provided by oh-my-zsh libs,
# # plugins, and themes. Aliases can be placed here, though oh-my-zsh
# # users are encouraged to define aliases within the ZSH_CUSTOM folder.
# # For a full list of active aliases, run `alias`.
# #
# # Example aliases
# # alias zshconfig="mate ~/.zshrc"
# # alias ohmyzsh="mate ~/.oh-my-zsh"


# # from https://chr4.org/blog/2014/09/10/conf-dot-d-like-directories-for-zsh-slash-bash-dotfiles/
# # Load all files from .shell/rc.d directory
# #if [ -d $HOME/.shellrc/rc.d ]; then
# if [ -n "$(ls -A $HOME/.shellrc/rc.d 2>/dev/null)" ]; then
#   for file in $HOME/.shellrc/rc.d/*.sh; do
#     echo "sourcing $file"
#     source $file
#   done
# fi

# # Load all files from .shell/zshrc.d directory
# #if [ -d $HOME/.shellrc/zshrc.d ]; then
# if [ -n "$(ls -A $HOME/.shellrc/zshrc.d 2>/dev/null)" ]; then
#   for file in $HOME/.shellrc/zshrc.d/*.zsh; do
#     echo "sourcing $file"
#     source $file
#   done
# fi

# # Load all files from .shell/completions directory
# #if [ -d $HOME/.shellrc/zshrc.d ]; then
# if [ -n "$(ls -A $HOME/.shellrc/completions 2>/dev/null)" ]; then
#   for file in $HOME/.shellrc/completions/*.zsh; do
#     echo "sourcing $file"
#     source $file
#   done
# fi

# # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# # . "$HOME/.asdf/asdf.sh"
# eval "$(mise activate zsh)"

# # echo "sourcing iTerm Shell integration"
# # source $HOME/.config/iTerm/iterm2_shell_integration.zsh

# # The following lines were added by compinstall
# #zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
# #zstyle :compinstall filename '/Users/Can/.zshrc'
# #autoload -Uz compinit
# #compinit
# # End of lines added by compinstall

# # tabtab source for packages
# # uninstall by removing these lines
# [[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# autoload -Uz compinit && compinit

# # . "$HOME/.asdf/asdf.sh"
# # asdf reshim nodejs
# # asdf reshim pnpm
# # asdf reshim golang

# autoload -U +X bashcompinit && bashcompinit
# # complete -o nospace -C /usr/local/bin/terraform terraform

# # set up bash completions
# # https://blog.natterstefan.me/how-to-use-multiple-node-version-with-asdf
# # . "$HOME/.asdf/completions/asdf.bash"

# # export NVM_DIR="$HOME/.nvm"
# # [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# # [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# # bun completions
# [ -s "/Users/Can/.bun/_bun" ] && source "/Users/Can/.bun/_bun"
# # pnpm end

# eval "$(starship init zsh)"

# # Nix
# if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
#   . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
# fi
# # End Nix

# echo "done";

# # clear screen
# echoti clear;
